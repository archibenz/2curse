clc;
clear;

% Список работ в формате:
% [начальное_событие, конечное_событие, длительность]
% — взято по рисунку варианта 7:
% (1→2=4), (1→4=7), (1→5=3), (2→4=2), (2→6=4), (3→5=5),
% (3→9=7), (4→5=9), (4→8=9), (5→7=7), (5→9=4), (6→7=5),
% (7→9=9), (8→7=7), (8→10=3), (9→10=3).
works = [
    1, 2, 4;
    1, 4, 7;
    1, 5, 3;
    1, 3, 5;
    2, 4, 2;
    2, 6, 4;
    3, 9, 7;
    4, 5, 6;
    4, 8, 9;
    5, 8, 8;
    5, 9, 4;
    6, 7, 5;
    6, 8, 7;
    7, 10, 9;
    8, 10, 5;
    9, 10, 3
];

% Определяем число событий (вершин) как максимум из всех концов
n = max(works(:,2)); % здесь получится 10
m = size(works, 1);

% Создаем матрицу смежности (adj) и матрицу длительностей (dur)
adj = zeros(n);
dur = zeros(n);

for i = 1:m
    from = works(i,1);
    to   = works(i,2);
    t    = works(i,3);
    adj(from, to) = 1;
    dur(from, to) = t;
end

% Массивы для ранних (early) и поздних (late) сроков
early = zeros(1, n); 
late  = zeros(1, n);

% 1) Расчет ранних сроков (от "начала" к "концу")
%    Предполагаем, что событие 1 — стартовое, ранний срок = 0
early(1) = 0;

% Идём по событиям последовательно (если в графе нет перекрёстных циклов)
for j = 2:n
    preds = find(adj(:, j))';  % список вершин, ведущих к j
    if ~isempty(preds)
        % Берём максимум (ранний срок предка + длительность работы предок→j)
        early(j) = max( early(preds) + dur(sub2ind(size(dur), preds, j*ones(size(preds)))) );
    end
end

% 2) Расчет поздних сроков (от "конца" к "началу")
%    Допустим, событие n = 10 — финиш, поздний срок совпадает с ранним
late(n) = early(n);

for i = n-1:-1:1
    succs = find(adj(i, :));  % список вершин, в которые i ведёт
    if ~isempty(succs)
        % Берём минимум (поздний срок потомка − длительность работы i→потомок)
        late(i) = min( late(succs) - dur(i, succs) );
    else
        % Если у вершины нет потомков, оставляем late(i) = early(i)
        late(i) = early(i);
    end
end

% 3) Полные резервы времени
reserve = late - early;

% Вывод результатов
disp('Событие | Ранний срок | Поздний срок | Резерв');
for i = 1:n
    fprintf('   %2d    |     %2d      |     %2d      |   %2d\n', ...
            i, early(i), late(i), reserve(i));
end

% 4) Критический путь как события с нулевым резервом (R=0)
crit_events = find(reserve == 0);

fprintf('\nКритический путь (события с R=0): ');
fprintf('%d ', crit_events);
fprintf('\nДлина критического пути (время выполнения проекта): %d\n\n', early(n));