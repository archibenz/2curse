.text
.global  _start

_start:     
    LDR R0, =ADR1      // Загружаем адрес массива в R0
    LDR R1, [R0]       // Загружаем первый элемент массива в R1
    LDR R2, [R0, #4]   // Загружаем второй элемент массива в R2
    LDR R3, [R0, #8]   // Загружаем третий элемент массива в R3

    LDR R4, =ADR2      // Загружаем адрес второго массива в R4
    STMIA R4!, {R1-R3} // Сохраняем R1, R2, R3 в память по адресу R4 (автоинкремент)

    LDMDB R4!, {R5-R7} // Загружаем данные обратно в R5, R6, R7 (автодекремент)

    LDR R8, =ADR3      // Загружаем адрес третьей переменной в R8
    LDR R8, [R8]       // Загружаем значение из памяти в R8
    STR R8, [R0]       // Сохраняем значение в память по адресу R0

Stop: 
    B Stop             // Бесконечный цикл

// Определение памяти
ADR1: .word 20, 36, 52  // Исходный массив
ADR2: .word 0, 0, 0     // Память для хранения копии массива
ADR3: .word 100         // Значение для загрузки в R8

.end