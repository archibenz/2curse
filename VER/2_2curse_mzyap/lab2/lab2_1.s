.text
.global _start

_start:
    @ Загружаем числа в регистры
    LDR R1, =0x7E89FD56  @ Число 1 в R1
    MOVW R2, #0x53A4     @ Загружаем младшие 16 бит числа 2
    MOVT R2, #0x7BC7     @ Загружаем старшие 16 бит числа 2

    @ Выполняем сложение (без флагов)
    ADD R3, R1, R2       @ R3 = R1 + R2

    @ Выполняем сложение (с обновлением флагов)
    ADDS R3, R1, R2      @ R3 = R1 + R2 (флаги обновляются)
    
    @ Сохраняем CPSR в R4 для отладки
    MRS R4, CPSR         @ Копируем CPSR в R4
    
    @ Выполняем вычитание (без флагов)
    SUB R3, R1, R2       @ R3 = R1 - R2

    @ Выполняем вычитание (с обновлением флагов)
    SUBS R3, R1, R2      @ R3 = R1 - R2 (флаги обновляются)

    @ Сохраняем CPSR после SUBS в R5
    MRS R5, CPSR         @ Копируем CPSR в R5

    @ Бесконечный цикл, чтобы программа не завершалась
stop:
    B stop