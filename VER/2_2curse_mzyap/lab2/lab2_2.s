.text
.global _start

_start:
    LDR R0, ADR      @ Загружаем адрес данных в R0
    LDR R1, CNT      @ Загружаем адрес переменной CNT в R1
    MOV R5, #2        @ Устанавливаем R5 в 2 напрямую (замена LDR)

MET:
    LDR R2, [R0]      @ Загружаем значение из памяти в R2
    TST R2, #8        @ Проверяем, установлен ли 3-й бит (маска 0x08)
    ADDEQ R3, R1, R2  @ Если 3-й бит R2 == 0, выполняем сложение R3 = R1 + R2

    SUBNE R3, R1, R2  @ Если 3-й бит R2 == 1, выполняем вычитание R3 = R1 - R2
    STR R3, RESULT    @ Сохраняем R3 в памяти RESULT

    SUBS R5, R5, #1   @ Уменьшаем счётчик итераций
    BNE MET           @ Если счётчик > 0, повторяем цикл

fin:
    B fin             @ Останавливаем выполнение (бесконечный цикл)

ADR:    .word 0xFF200040  @ Адрес данных
CNT:    .word 100         @ Начальное значение счётчика
RESULT: .space 4          @ Выделяем место под результат

.end
